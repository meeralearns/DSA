public class Mergesort {
	public static void merge(int[] nums, int left, int mid, int right) {
		int i = left ,j=mid+1,k,index=left;
		int temp[] = new int[nums.length];
		while(i<=mid && j<=right) {
			if(nums[i]<nums[j]) {
				temp[index]= nums[i];
				i++;
			}else {
				temp[index]= nums[j];
				j++;
			}
			index++;
		}
		if(i>mid) {
			while(j<=right) {
				temp[index] = nums[j];
				j++;
				index++;
			}
		}else {
			while(i<=mid) {
				temp[index] = nums[i];
				i++;
				index++;
			}
		}
		
		for(k=left;k<index;k++) {
			nums[k] = temp[k];
		}
		
	}
	public static  void mergeSort(int[] nums, int left , int right) {
		if(left<right) {
			int mid = (left+right)/2;
			mergeSort(nums,left,mid);
			mergeSort(nums, mid+1, right);
			merge(nums,left,mid,right);
		}
	}
	public static void main(String args[]) {
		int nums[] = { 2, 1, 6, 3, 7, 2, 0 };
		System.out.println("Before sorting ");
		for (int i : nums) {
			System.out.print(i + " ");
		}
		
        mergeSort(nums,0,nums.length-1);
		System.out.println("After sorting ");
		for (int i : nums) {
			System.out.print(i + " ");
		}
	}

}
